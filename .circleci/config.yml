version: 2.1

centos_env: &centos_env
  environment:
    PACKAGE_INSTALL: "yum -y "
    PG_BINDIR: "/usr/pgsql-"
    PG_VERSION: 12
  shell: /bin/bash
  working_directory: /tmp/project/

debian_env: &debian_env
  environment:
    PACKAGE_INSTALL: "apt -y "
    PG_BINDIR: "/usr/lib/postgresql/"
    PG_VERSION: 12
  shell: /bin/bash
  working_directory: /tmp/project/

executors:
  centos6:
    docker: [{ image: "dalibo/temboard-agent-sdk:centos6" }]
    <<: *centos_env

  centos7:
    docker: [{ image: "dalibo/temboard-agent-sdk:centos7" }]
    <<: *centos_env

  buster:
    docker: [{ image: "dalibo/temboard-agent-sdk:buster" }]
    <<: *debian_env

  stretch:
    docker: [{ image: "dalibo/temboard-agent-sdk:stretch" }]
    <<: *debian_env

commands:
  update-packages:
    description: update packages
    steps:
      - run:
          command: |
            ${PACKAGE_INSTALL} update

  shellcheck-job:
    description: run shellcheck on scripts
    steps:
      - run:
          name: name install shellcheck
          command: ${PACKAGE_INSTALL} install shellcheck
      - run:
          name: Shellcheck code analysis
          command: shellcheck -f gcc pitrery archive_wal restore_wal

  init-cluster-job:
    description: initialise PostgreSQL cluster
    steps:
      - run:
          name: initdb and start PostgreSQL
          command: sudo -su postgres ${PG_BINDIR}${PG_VERSION}/bin/initdb -D /tmp/pgsql
      - run:
          name: Setup archiving
          command:  |
            echo "archive_mode = on" >> /tmp/pgsql/postgresql.auto.conf
            echo "wal_level = 'replica'" >> /tmp/pgsql/postgresql.auto.conf
            echo "archive_command = '/usr/local/bin/archive_wal -a /tmp/backup/archived_wal %p'" >>/tmp/pgsql/postgresql.auto.conf
      - run:
          name: start PostgreSQL
          command: |
            cd /tmp
            sudo -su postgres ${PG_BINDIR}${PG_VERSION}/bin/pg_ctl start -w -D /tmp/pgsql -l /tmp/logfile

  tests-func-job:
    description: run functional tests
    steps:
      - run:
          name: Install pitrery
          command: make install
      - run:
          name: name install bats
          command: ${PACKAGE_INSTALL} install bats
      - run:
          name: Change ownership
          command: chown -R postgres:postgres ./tests/
      - run:
          name: Execute tests func
          command: sudo -su postgres bats -t tests/func.bats


jobs:
  buster_12:
    executor: buster
    steps:
      - update-packages
      - init-cluster-job
      - checkout
      - tests-func-job
      - shellcheck-job

  stretch_96:
    executor: stretch
    environment:
      PG_VERSION: "9.6"
    steps:
      - update-packages
      - init-cluster-job
      - checkout
      - tests-func-job

  centos7_12:
    executor: centos7
    steps:
      - init-cluster-job
      - checkout
      - tests-func-job

  centos7_10:
    executor: centos7
    environment:
      PG_VERSION: "10"
    steps:
      - init-cluster-job
      - checkout
      - tests-func-job

  centos6_96:
    executor: centos6
    environment:
      PG_VERSION: "9.6"
    steps:
      - init-cluster-job
      - checkout
      - tests-func-job

workflows:
  version: 2
  spellcheck-and-functional:
    jobs:
      - buster_12
      - stretch_96
      - centos7_10
      - centos7_12
      - centos6_96
